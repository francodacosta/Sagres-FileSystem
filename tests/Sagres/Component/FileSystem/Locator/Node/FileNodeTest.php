<?php
namespace Sagres\Component\FileSystem\Locator\Node;



/**
 * Test class for FileNode.
 * Generated by PHPUnit on 2012-03-14 at 15:23:08.
 */
class FileNodeTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var FileNode
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
    }

    private function getFixturesPath($path)
    {
        return __DIR__ . '/../../../../../fixtures/' . $path;
    }
    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    protected function getReadWriteFile()
    {
        $file = $this->getFixturesPath('read.write.file');
        $o = new FileNode($file);
        return $o;
    }

    /**
     * @covers Sagres\Component\FileSystem\Locator\Node\AbstractNode::isReadable
     * @covers Sagres\Component\FileSystem\Locator\Node\AbstractNode::__construct
     * @covers Sagres\Component\FileSystem\Locator\Node\FileNode::processPath
     * @covers Sagres\Component\FileSystem\Locator\Node\FileNode::__construct
     */
    public function testIsReadable()
    {
        $o = $this->getReadWriteFile();
        $this->assertTrue($o->isReadable());
    }

    /**
     * @covers Sagres\Component\FileSystem\Locator\Node\AbstractNode::isWritable
     */
    public function testIsWritable()
    {
         $o = $this->getReadWriteFile();
        $this->assertTrue($o->isWritable());
    }

    /**
     * @covers Sagres\Component\FileSystem\Locator\Node\AbstractNode::exists
     */
    public function testExists()
    {
         $o = $this->getReadWriteFile();
         $this->assertTrue($o->exists());
    }

    /**
     * @covers Sagres\Component\FileSystem\Locator\Node\AbstractNode::getName
     */
    public function testGetName()
    {
         $o = $this->getReadWriteFile();
         $this->assertEquals('read.write.file', $o->getName());
    }

    /**
     * @covers Sagres\Component\FileSystem\Locator\Node\AbstractNode::getPath
     */
    public function testGetPath()
    {
         $o = $this->getReadWriteFile();
         $this->assertEquals( __DIR__ . '/../../../../../fixtures/read.write.file', $o->getPath());
    }

    /**
     * @covers Sagres\Component\FileSystem\Locator\Node\AbstractNode::getType
     * @covers Sagres\Component\FileSystem\Locator\Node\AbstractNode::setType
     */
    public function testGetType()
    {
        $o = $this->getReadWriteFile();
         $this->assertEquals($o::TYPE_FILE, $o->getType());
    }

    /**
     * @covers Sagres\Component\FileSystem\Locator\Node\AbstractNode::__toString
     */
    public function test__toString()
    {
         $o = $this->getReadWriteFile();
         $this->assertEquals( __DIR__ . '/../../../../../fixtures/read.write.file', $o);
    }
}
?>
