<?php
namespace Sagres\Component\FileSystem;
use Sagres\Component\FileSystem\Locator\Node\FileNode;
use Sagres\Component\FileSystem\Locator\Node\LinkNode;


/**
 * Test class for Info.
 * Generated by PHPUnit on 2012-03-16 at 09:20:47.
 */
class InfoTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Info
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $file = __DIR__ . '/../../../fixtures/read.write.file';
        $this->object = new Info(new FileNode($file));
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Sagres\Component\FileSystem\Info::getNode
     * @covers Sagres\Component\FileSystem\Info::populate
     * @covers Sagres\Component\FileSystem\Info::__construct
     */
    public function testGetNode()
    {
        $file = __DIR__ . '/../../../fixtures/read.write.file';
        $node = new FileNode($file);
        $o = new Info($node);
        $this->assertSame($node, $o->getNode());
    }
    /**
     * @covers Sagres\Component\FileSystem\Info::getNode
     * @covers Sagres\Component\FileSystem\Info::populate
     * @expectedException Sagres\Component\FileSystem\Exception\ResourceNotFoundException
     */
    public function testGetNode_nonExisting()
    {
        $file = __DIR__ . '/asdasdfsadfsadfsdaf';
        $node = new FileNode($file);
        $o = new Info($node);
    }

    /**
     * @covers Sagres\Component\FileSystem\Info::getDeviceNumber
     * @covers Sagres\Component\FileSystem\Info::populate
     * @todo Implement testGetDeviceNumber().
     */
    public function testGetDeviceNumber()
    {
        $this->assertNotNull( $this->object->getDeviceNumber());
    }

    /**
     * @covers Sagres\Component\FileSystem\Info::getInodeNumber
     * @covers Sagres\Component\FileSystem\Info::populate
     */
    public function testGetInodeNumber()
    {
        $this->assertNotNull( $this->object->getInodeNumber());
    }

    /**
     * @covers Sagres\Component\FileSystem\Info::getInodeMode
     * @covers Sagres\Component\FileSystem\Info::populate
     */
    public function testGetInodeMode()
    {
        $this->assertNotNull( $this->object->getInodeMode());;
    }

    /**
     * @covers Sagres\Component\FileSystem\Info::getNumberOfLinks
     * @covers Sagres\Component\FileSystem\Info::populate
     */
    public function testGetNumberOfLinks()
    {
        $this->assertNotNull( $this->object->getNumberOfLinks());
    }

    /**
     * @covers Sagres\Component\FileSystem\Info::getUid
     * @covers Sagres\Component\FileSystem\Info::populate
     */
    public function testGetUid()
    {
        $this->assertNotNull( $this->object->getUid());
    }

    /**
     * @covers Sagres\Component\FileSystem\Info::getGid
     * @covers Sagres\Component\FileSystem\Info::populate
     */
    public function testGetGid()
    {
        $this->assertNotNull( $this->object->getGid());
    }

    /**
     * @covers Sagres\Component\FileSystem\Info::getDeviceType
     * @covers Sagres\Component\FileSystem\Info::populate
     */
    public function testGetDeviceType()
    {
        $this->assertNotNull( $this->object->getDeviceType());
    }

    /**
     * @covers Sagres\Component\FileSystem\Info::getSize
     * @covers Sagres\Component\FileSystem\Info::populate
     */
    public function testGetSize()
    {
        $this->assertNotNull( $this->object->getSize());
    }

    /**
     * @covers Sagres\Component\FileSystem\Info::getAccessTime
     * @covers Sagres\Component\FileSystem\Info::populate
     */
    public function testGetAccessTime()
    {
        $this->assertNotNull( $this->object->getAccessTime());
    }

    /**
     * @covers Sagres\Component\FileSystem\Info::getModificationTime
     * @covers Sagres\Component\FileSystem\Info::populate
     */
    public function testGetModificationTime()
    {
        $this->assertNotNull( $this->object->getModificationTime());
    }

    /**
     * @covers Sagres\Component\FileSystem\Info::getLastInodeChangeTime
     * @covers Sagres\Component\FileSystem\Info::populate
     */
    public function testGetLastInodeChangeTime()
    {
        $this->assertNotNull( $this->object->getLastInodeChangeTime());
    }

    /**
     * @covers Sagres\Component\FileSystem\Info::getBlockSize
     * @covers Sagres\Component\FileSystem\Info::populate
     */
    public function testGetBlockSize()
    {
        $this->assertNotNull( $this->object->getBlockSize());
    }

    /**
     * @covers Sagres\Component\FileSystem\Info::getBlocksAllocated
     * @covers Sagres\Component\FileSystem\Info::populate
     */
    public function testGetBlocksAllocated()
    {
        $this->assertNotNull( $this->object->getBlocksAllocated());
    }

    /**
     * @covers Sagres\Component\FileSystem\Info::populate
     */
    public function test_withLinkNode()
    {
        $file = __DIR__ . '/../../../fixtures/linked.file';
        $node = new LinkNode($file);
        $o = new Info($node);
        $this->assertSame($node, $o->getNode());
    }

    /**
     * @covers Sagres\Component\FileSystem\Info::getOctalPermissions
     */
    public function testGetOctalPermissions()
    {
        $this->assertEquals("0777",  $this->object->getOctalPermissions());
    }

    /**
     * @covers Sagres\Component\FileSystem\Info::getHumanReadablePermissions
     */
    public function testGetHumanReadablePermissions()
    {
        $this->assertEquals("-rwxrwxrwx",  $this->object->getHumanReadablePermissions());
    }

    /**
     * @covers Sagres\Component\FileSystem\Info::getPermissions
     */
    public function testGetPermissions()
    {
        $this->assertNotNull("-rwxrwxrwx",  $this->object->getPermissions());
        $this->assertNotNull("-rwxrwxrwx",  $this->object->getPermissions(0));
        $this->assertNotNull("-rwxrwxrwx",  $this->object->getPermissions(1));
    }
    /**
     * @covers Sagres\Component\FileSystem\Info::getPermissions
     * @expectedException \UnexpectedValueException
     */
    public function testGetPermissions_wrongformat()
    {
        $this->object->getPermissions(44);
    }

    /**
     * @covers Sagres\Component\FileSystem\Info::getOwnerUsername
     */
    public function testGetOwnerUsername()
    {
       if (!function_exists('posix_getpwuid')) {
           $this->markTestSkipped('posix extension not installed');
       }

        $this->assertNotNull($this->object->getOwnerUsername());
    }

    /**
     * @covers Sagres\Component\FileSystem\Info::getGroupName
     */
    public function testGetGroupName()
    {
        if (!function_exists('posix_getgrgid')) {
            $this->markTestSkipped('posix extension not installed');
        }
        $this->assertNotNull($this->object->getGroupName());
    }

}
?>
